import * as monapt from 'monapt';
import AssetAdapter from '../adapter/asset';
import OwnerAdapter from '../adapter/owner';
import * as SeatReservationAssetFactory from '../factory/asset/seatReservation';
import * as GMOCardFactory from '../factory/card/gmo';
import * as MemberOwnerFactory from '../factory/owner/member';
export declare type IOwnerOperation<T> = (ownerAdapter: OwnerAdapter) => Promise<T>;
export declare type IAssetAndOwnerOperation<T> = (assetAdapter: AssetAdapter, ownerAdapter: OwnerAdapter) => Promise<T>;
export declare function login(username: string, password: string): IOwnerOperation<monapt.Option<MemberOwnerFactory.IUnhashedFields>>;
export declare function updateProfile(ownerId: string, update: MemberOwnerFactory.IVariableFields): IOwnerOperation<void>;
export declare function addCard(ownerId: string, card: GMOCardFactory.IGMOCardRaw | GMOCardFactory.IGMOCardTokenized): IOwnerOperation<void>;
export declare function removeCard(ownerId: string, cardSeq: string): IOwnerOperation<void>;
export declare function findSeatReservationAssets(ownerId: string): IAssetAndOwnerOperation<SeatReservationAssetFactory.ISeatReservationAsset[]>;
